name: Build and release a Kubewarden policy written in Rust

on:
  workflow_call:
    inputs:
      oci-target:
        type: string
        required: true
      artifacthub:
        description: "check artifacthub-pkg.yml for submission to ArtifactHub"
        required: false
        type: boolean
        default: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        uses: kubewarden/github-actions/policy-gh-action-dependencies@v3.3.5
      - uses: actions/checkout@v4
        with:
          # until https://github.com/actions/checkout/pull/579 is released
          fetch-depth: 0
      - id: calculate-version
        shell: bash
        run: |
          if [ ${{ startsWith(github.ref, 'refs/tags/v') }} == true ]; then
            # Triggered via normal tag.
            # Use the latest tag (e.g: v0.1.11) without the `v` prefix.
            version=$(git describe --tags --abbrev=0 | cut -c2-)
          else
            # Triggered via branch, version is not checked in artifacthub.
            # Still, `make artifacthub-pkg.yml` needs a proper semver string.
            # 
            # Use most recent tag with the number of additional commits on top
            # of the tagged object & last commit hash (eg. v0.1.11-3-g8a36322),
            # without the `v` prefix.
            version=$(git describe --tags | cut -c2-)
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Check that artifacthub-pkg.yml is up-to-date
        # skip when releasing :latest from main, versions will not match
        if: startsWith(github.ref, 'refs/tags/v') && inputs.artifacthub
        uses: kubewarden/github-actions/check-artifacthub@v3.3.5
        with:
          version: ${{ steps.calculate-version.outputs.version }}
      - name: Build and annotate policy
        uses: kubewarden/github-actions/policy-build-rust@v3.3.5
      - name: Run e2e tests
        run: |
          make e2e-tests
      - name: Release
        uses: kubewarden/github-actions/policy-release@v3.3.5
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          oci-target: ${{ inputs.oci-target }}
          policy-version: ${{ steps.calculate-version.outputs.version }}
  push-artifacthub:
    # skip when releasing :latest from main, versions will not match
    if: startsWith(github.ref, 'refs/tags/v') && inputs.artifacthub
    needs: release
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Push artifacthub files to artifacthub branch
        uses: kubewarden/github-actions/push-artifacthub@v3.3.5
