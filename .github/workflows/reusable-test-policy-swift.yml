name: Tests and linters

on:
  workflow_call:
    inputs:
      artifacthub:
        description: "check artifacthub-pkg.yml for submission to ArtifactHub"
        required: false
        type: boolean
        default: true
    secrets: {}

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        uses: swiftwasm/swiftwasm-action@v5.9
        with:
          shell-action: carton test
  check-artifacthub:
    if: ${{ inputs.artifacthub }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # until https://github.com/actions/checkout/pull/579 is released
          fetch-depth: 0
      - name: Install kwctl
        uses: kubewarden/github-actions/kwctl-installer@v3.4.2
      - id: calculate-version
        shell: bash
        run: |
          if [ ${{ startsWith(github.ref, 'refs/tags/v') }} == true ]; then
            # Triggered via normal tag.
            # Use the latest tag (e.g: v0.1.11) without the `v` prefix.
            version=$(git describe --tags --abbrev=0 | cut -c2-)
          else
            # Triggered via branch, version is not checked in artifacthub.
            # Still, `make artifacthub-pkg.yml` needs a proper semver string.
            if [ $(git describe --tags) ]; then
              # Tag exists, use most recent tag with the number of additional
              # commits on top of the tagged object & last commit hash (eg.
              # v0.1.11-3-g8a36322), without the `v` prefix.
              version=$(git describe --tags | cut -c2-)
            else
              # Tag doesn't exist, provide bogus version
              version="0.0.0-$(git describe --always)-unreleased"
            fi 
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Check that artifacthub-pkg.yml is up-to-date
        uses: kubewarden/github-actions/check-artifacthub@v3.4.2
        with:
          version: ${{ steps.calculate-version.outputs.version }}
          check_version: false # must match a git tag that hasn't been created yet, so let's ignore until then
